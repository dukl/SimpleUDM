/**
* Nudm_SDM
* Nudm Subscriber Data Management Service. ï¿½ 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 2.1.0.alpha-1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * UEContextInSMFDataRetrievalApi.h
 *
 * 
 */

#ifndef UEContextInSMFDataRetrievalApi_H_
#define UEContextInSMFDataRetrievalApi_H_


#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>


#include "ProblemDetails.h"
#include "UeContextInSmfData.h"
#include <string>

namespace oai {
namespace udm {
namespace api {

using namespace oai::udm::model;

class  UEContextInSMFDataRetrievalApi {
public:
    UEContextInSMFDataRetrievalApi(std::shared_ptr<Pistache::Rest::Router>);
    virtual ~UEContextInSMFDataRetrievalApi() {}
    void init();

    const std::string base = "/nudm-sdm/v2";

private:
    void setupRoutes();

    void get_ue_ctx_in_smf_data_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void ue_context_in_smf_data_retrieval_api_default_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);

    std::shared_ptr<Pistache::Rest::Router> router;

    /// <summary>
    /// retrieve a UE&#39;s UE Context In SMF Data
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="supi">Identifier of the UE</param>
    /// <param name="supportedFeatures">Supported Features (optional, default to &quot;&quot;)</param>
    virtual void get_ue_ctx_in_smf_data(const std::string &supi, const Pistache::Optional<std::string> &supportedFeatures, Pistache::Http::ResponseWriter &response) = 0;

};

}
}
}

#endif /* UEContextInSMFDataRetrievalApi_H_ */

