/**
* Nudm_SDM
* Nudm Subscriber Data Management Service. ï¿½ 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 2.1.0.alpha-1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SharedData.h
 *
 * 
 */

#ifndef SharedData_H_
#define SharedData_H_


#include "DnnConfiguration.h"
#include <string>
#include "SnssaiInfo.h"
#include "SmsSubscriptionData.h"
#include "SmsManagementSubscriptionData.h"
#include "AccessAndMobilitySubscriptionData.h"
#include <map>
#include "TraceData.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace oai {
namespace udm {
namespace model {

/// <summary>
/// 
/// </summary>
class  SharedData
{
public:
    SharedData();
    virtual ~SharedData();

    void validate();

    /////////////////////////////////////////////
    /// SharedData members

    /// <summary>
    /// 
    /// </summary>
    std::string getSharedDataId() const;
    void setSharedDataId(std::string const& value);
        /// <summary>
    /// 
    /// </summary>
    AccessAndMobilitySubscriptionData getSharedAmData() const;
    void setSharedAmData(AccessAndMobilitySubscriptionData const& value);
    bool sharedAmDataIsSet() const;
    void unsetSharedAmData();
    /// <summary>
    /// 
    /// </summary>
    SmsSubscriptionData getSharedSmsSubsData() const;
    void setSharedSmsSubsData(SmsSubscriptionData const& value);
    bool sharedSmsSubsDataIsSet() const;
    void unsetSharedSmsSubsData();
    /// <summary>
    /// 
    /// </summary>
    SmsManagementSubscriptionData getSharedSmsMngSubsData() const;
    void setSharedSmsMngSubsData(SmsManagementSubscriptionData const& value);
    bool sharedSmsMngSubsDataIsSet() const;
    void unsetSharedSmsMngSubsData();
    /// <summary>
    /// 
    /// </summary>
    std::map<std::string, DnnConfiguration>& getSharedDnnConfigurations();
    bool sharedDnnConfigurationsIsSet() const;
    void unsetSharedDnnConfigurations();
    /// <summary>
    /// 
    /// </summary>
    TraceData getSharedTraceData() const;
    void setSharedTraceData(TraceData const& value);
    bool sharedTraceDataIsSet() const;
    void unsetSharedTraceData();
    /// <summary>
    /// 
    /// </summary>
    std::map<std::string, SnssaiInfo>& getSharedSnssaiInfos();
    bool sharedSnssaiInfosIsSet() const;
    void unsetSharedSnssaiInfos();

    friend void to_json(nlohmann::json& j, const SharedData& o);
    friend void from_json(const nlohmann::json& j, SharedData& o);
protected:
    std::string m_SharedDataId;

    AccessAndMobilitySubscriptionData m_SharedAmData;
    bool m_SharedAmDataIsSet;
    SmsSubscriptionData m_SharedSmsSubsData;
    bool m_SharedSmsSubsDataIsSet;
    SmsManagementSubscriptionData m_SharedSmsMngSubsData;
    bool m_SharedSmsMngSubsDataIsSet;
    std::map<std::string, DnnConfiguration> m_SharedDnnConfigurations;
    bool m_SharedDnnConfigurationsIsSet;
    TraceData m_SharedTraceData;
    bool m_SharedTraceDataIsSet;
    std::map<std::string, SnssaiInfo> m_SharedSnssaiInfos;
    bool m_SharedSnssaiInfosIsSet;
};

}
}
}

#endif /* SharedData_H_ */
