/**
* Nudm_SDM
* Nudm Subscriber Data Management Service. ï¿½ 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 2.1.0.alpha-1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SdmSubscription.h
 *
 * 
 */

#ifndef SdmSubscription_H_
#define SdmSubscription_H_


#include "ServiceName.h"
#include <string>
#include "PlmnId.h"
#include "Snssai.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace oai {
namespace udm {
namespace model {

/// <summary>
/// 
/// </summary>
class  SdmSubscription
{
public:
    SdmSubscription();
    virtual ~SdmSubscription();

    void validate();

    /////////////////////////////////////////////
    /// SdmSubscription members

    /// <summary>
    /// 
    /// </summary>
    std::string getNfInstanceId() const;
    void setNfInstanceId(std::string const& value);
        /// <summary>
    /// 
    /// </summary>
    bool isImplicitUnsubscribe() const;
    void setImplicitUnsubscribe(bool const value);
    bool implicitUnsubscribeIsSet() const;
    void unsetImplicitUnsubscribe();
    /// <summary>
    /// 
    /// </summary>
    std::string getExpires() const;
    void setExpires(std::string const& value);
    bool expiresIsSet() const;
    void unsetExpires();
    /// <summary>
    /// 
    /// </summary>
    std::string getCallbackReference() const;
    void setCallbackReference(std::string const& value);
        /// <summary>
    /// 
    /// </summary>
    ServiceName getAmfServiceName() const;
    void setAmfServiceName(ServiceName const& value);
    bool amfServiceNameIsSet() const;
    void unsetAmfServiceName();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::string>& getMonitoredResourceUris();
        /// <summary>
    /// 
    /// </summary>
    Snssai getSingleNssai() const;
    void setSingleNssai(Snssai const& value);
    bool singleNssaiIsSet() const;
    void unsetSingleNssai();
    /// <summary>
    /// 
    /// </summary>
    std::string getDnn() const;
    void setDnn(std::string const& value);
    bool dnnIsSet() const;
    void unsetDnn();
    /// <summary>
    /// 
    /// </summary>
    std::string getSubscriptionId() const;
    void setSubscriptionId(std::string const& value);
    bool subscriptionIdIsSet() const;
    void unsetSubscriptionId();
    /// <summary>
    /// 
    /// </summary>
    PlmnId getPlmnId() const;
    void setPlmnId(PlmnId const& value);
    bool plmnIdIsSet() const;
    void unsetPlmnId();

    friend void to_json(nlohmann::json& j, const SdmSubscription& o);
    friend void from_json(const nlohmann::json& j, SdmSubscription& o);
protected:
    std::string m_NfInstanceId;

    bool m_ImplicitUnsubscribe;
    bool m_ImplicitUnsubscribeIsSet;
    std::string m_Expires;
    bool m_ExpiresIsSet;
    std::string m_CallbackReference;

    ServiceName m_AmfServiceName;
    bool m_AmfServiceNameIsSet;
    std::vector<std::string> m_MonitoredResourceUris;

    Snssai m_SingleNssai;
    bool m_SingleNssaiIsSet;
    std::string m_Dnn;
    bool m_DnnIsSet;
    std::string m_SubscriptionId;
    bool m_SubscriptionIdIsSet;
    PlmnId m_PlmnId;
    bool m_PlmnIdIsSet;
};

}
}
}

#endif /* SdmSubscription_H_ */
